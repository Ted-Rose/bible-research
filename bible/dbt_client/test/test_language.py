# coding: utf-8

"""
    Digital Bible Platform

    Fast, easy, and free API access to video, audio, and text Bibles.  # noqa: E501

    The version of the OpenAPI document: 4.0.0-beta
    Contact: support@digitalbibleplatform.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.language import Language  # noqa: E501
from openapi_client.rest import ApiException

class TestLanguage(unittest.TestCase):
    """Language unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Language
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.language.Language()  # noqa: E501
        if include_optional :
            return Language(
                id = 6411, 
                glotto_id = 'stan1288', 
                iso = 'spa', 
                name = 'Spanish', 
                maps = 'Andorra and France', 
                development = 'Fully developed. Bible: 1553-2000.', 
                use = '60,000,000 L2 speakers.', 
                location = '0', 
                area = 'Central, south; Canary Islands. Also in Andorra, ...', 
                population = 24900, 
                population_notes = '58,200,000 in United Kingdom (Crystal 2003). Population total all countries: 334,800,758.', 
                notes = 'The Aragonese dialect of Spanish is different from Aragonese language [arg]. Christian.', 
                typology = 'SVO,prepositions,genitives, relatives after noun heads,articles, numerals before noun heads...', 
                description = 'language description', 
                status = '6a', 
                country_id = 'ES', 
                rolv_code = '0', 
                deleted_at = '0'
            )
        else :
            return Language(
        )

    def testLanguage(self):
        """Test Language"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
