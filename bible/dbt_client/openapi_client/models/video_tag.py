# coding: utf-8

"""
    Digital Bible Platform

    Fast, easy, and free API access to video, audio, and text Bibles.  # noqa: E501

    The version of the OpenAPI document: 4.0.0-beta
    Contact: support@digitalbibleplatform.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class VideoTag(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'video_id': 'int',
        'category': 'int',
        'tag_type': 'int',
        'tag': 'str',
        'language_id': 'int',
        'organization_id': 'int',
        'book_id': 'str',
        'chapter_start': 'int',
        'chapter_end': 'int',
        'verse_start': 'int',
        'verse_end': 'int',
        'time_begin': 'int',
        'time_end': 'int',
        'created_at': 'str',
        'updated_at': 'str'
    }

    attribute_map = {
        'id': 'id',
        'video_id': 'video_id',
        'category': 'category',
        'tag_type': 'tag_type',
        'tag': 'tag',
        'language_id': 'language_id',
        'organization_id': 'organization_id',
        'book_id': 'book_id',
        'chapter_start': 'chapter_start',
        'chapter_end': 'chapter_end',
        'verse_start': 'verse_start',
        'verse_end': 'verse_end',
        'time_begin': 'time_begin',
        'time_end': 'time_end',
        'created_at': 'created_at',
        'updated_at': 'updated_at'
    }

    def __init__(self, id=None, video_id=None, category=None, tag_type=None, tag=None, language_id=None, organization_id=None, book_id=None, chapter_start=None, chapter_end=None, verse_start=None, verse_end=None, time_begin=None, time_end=None, created_at=None, updated_at=None, local_vars_configuration=None):  # noqa: E501
        """VideoTag - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._video_id = None
        self._category = None
        self._tag_type = None
        self._tag = None
        self._language_id = None
        self._organization_id = None
        self._book_id = None
        self._chapter_start = None
        self._chapter_end = None
        self._verse_start = None
        self._verse_end = None
        self._time_begin = None
        self._time_end = None
        self._created_at = None
        self._updated_at = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if video_id is not None:
            self.video_id = video_id
        if category is not None:
            self.category = category
        if tag_type is not None:
            self.tag_type = tag_type
        if tag is not None:
            self.tag = tag
        self.language_id = language_id
        self.organization_id = organization_id
        self.book_id = book_id
        self.chapter_start = chapter_start
        self.chapter_end = chapter_end
        self.verse_start = verse_start
        self.verse_end = verse_end
        self.time_begin = time_begin
        self.time_end = time_end
        self.created_at = created_at
        self.updated_at = updated_at

    @property
    def id(self):
        """Gets the id of this VideoTag.  # noqa: E501

        The incrementing id of the video tag  # noqa: E501

        :return: The id of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VideoTag.

        The incrementing id of the video tag  # noqa: E501

        :param id: The id of this VideoTag.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def video_id(self):
        """Gets the video_id of this VideoTag.  # noqa: E501

        The video id  # noqa: E501

        :return: The video_id of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._video_id

    @video_id.setter
    def video_id(self, video_id):
        """Sets the video_id of this VideoTag.

        The video id  # noqa: E501

        :param video_id: The video_id of this VideoTag.  # noqa: E501
        :type: int
        """

        self._video_id = video_id

    @property
    def category(self):
        """Gets the category of this VideoTag.  # noqa: E501

        The category  # noqa: E501

        :return: The category of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this VideoTag.

        The category  # noqa: E501

        :param category: The category of this VideoTag.  # noqa: E501
        :type: int
        """

        self._category = category

    @property
    def tag_type(self):
        """Gets the tag_type of this VideoTag.  # noqa: E501

        The category  # noqa: E501

        :return: The tag_type of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._tag_type

    @tag_type.setter
    def tag_type(self, tag_type):
        """Sets the tag_type of this VideoTag.

        The category  # noqa: E501

        :param tag_type: The tag_type of this VideoTag.  # noqa: E501
        :type: int
        """

        self._tag_type = tag_type

    @property
    def tag(self):
        """Gets the tag of this VideoTag.  # noqa: E501

        The tag  # noqa: E501

        :return: The tag of this VideoTag.  # noqa: E501
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this VideoTag.

        The tag  # noqa: E501

        :param tag: The tag of this VideoTag.  # noqa: E501
        :type: str
        """

        self._tag = tag

    @property
    def language_id(self):
        """Gets the language_id of this VideoTag.  # noqa: E501

        The language_id  # noqa: E501

        :return: The language_id of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._language_id

    @language_id.setter
    def language_id(self, language_id):
        """Sets the language_id of this VideoTag.

        The language_id  # noqa: E501

        :param language_id: The language_id of this VideoTag.  # noqa: E501
        :type: int
        """

        self._language_id = language_id

    @property
    def organization_id(self):
        """Gets the organization_id of this VideoTag.  # noqa: E501

        The language_id  # noqa: E501

        :return: The organization_id of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this VideoTag.

        The language_id  # noqa: E501

        :param organization_id: The organization_id of this VideoTag.  # noqa: E501
        :type: int
        """

        self._organization_id = organization_id

    @property
    def book_id(self):
        """Gets the book_id of this VideoTag.  # noqa: E501

        The book id  # noqa: E501

        :return: The book_id of this VideoTag.  # noqa: E501
        :rtype: str
        """
        return self._book_id

    @book_id.setter
    def book_id(self, book_id):
        """Sets the book_id of this VideoTag.

        The book id  # noqa: E501

        :param book_id: The book_id of this VideoTag.  # noqa: E501
        :type: str
        """

        self._book_id = book_id

    @property
    def chapter_start(self):
        """Gets the chapter_start of this VideoTag.  # noqa: E501

        The starting chapter  # noqa: E501

        :return: The chapter_start of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._chapter_start

    @chapter_start.setter
    def chapter_start(self, chapter_start):
        """Sets the chapter_start of this VideoTag.

        The starting chapter  # noqa: E501

        :param chapter_start: The chapter_start of this VideoTag.  # noqa: E501
        :type: int
        """

        self._chapter_start = chapter_start

    @property
    def chapter_end(self):
        """Gets the chapter_end of this VideoTag.  # noqa: E501

        The ending chapter  # noqa: E501

        :return: The chapter_end of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._chapter_end

    @chapter_end.setter
    def chapter_end(self, chapter_end):
        """Sets the chapter_end of this VideoTag.

        The ending chapter  # noqa: E501

        :param chapter_end: The chapter_end of this VideoTag.  # noqa: E501
        :type: int
        """

        self._chapter_end = chapter_end

    @property
    def verse_start(self):
        """Gets the verse_start of this VideoTag.  # noqa: E501

        The verse_start  # noqa: E501

        :return: The verse_start of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._verse_start

    @verse_start.setter
    def verse_start(self, verse_start):
        """Sets the verse_start of this VideoTag.

        The verse_start  # noqa: E501

        :param verse_start: The verse_start of this VideoTag.  # noqa: E501
        :type: int
        """

        self._verse_start = verse_start

    @property
    def verse_end(self):
        """Gets the verse_end of this VideoTag.  # noqa: E501

        The verse_end  # noqa: E501

        :return: The verse_end of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._verse_end

    @verse_end.setter
    def verse_end(self, verse_end):
        """Sets the verse_end of this VideoTag.

        The verse_end  # noqa: E501

        :param verse_end: The verse_end of this VideoTag.  # noqa: E501
        :type: int
        """

        self._verse_end = verse_end

    @property
    def time_begin(self):
        """Gets the time_begin of this VideoTag.  # noqa: E501

        The time_begin  # noqa: E501

        :return: The time_begin of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._time_begin

    @time_begin.setter
    def time_begin(self, time_begin):
        """Sets the time_begin of this VideoTag.

        The time_begin  # noqa: E501

        :param time_begin: The time_begin of this VideoTag.  # noqa: E501
        :type: int
        """

        self._time_begin = time_begin

    @property
    def time_end(self):
        """Gets the time_end of this VideoTag.  # noqa: E501

        The time_end  # noqa: E501

        :return: The time_end of this VideoTag.  # noqa: E501
        :rtype: int
        """
        return self._time_end

    @time_end.setter
    def time_end(self, time_end):
        """Sets the time_end of this VideoTag.

        The time_end  # noqa: E501

        :param time_end: The time_end of this VideoTag.  # noqa: E501
        :type: int
        """

        self._time_end = time_end

    @property
    def created_at(self):
        """Gets the created_at of this VideoTag.  # noqa: E501

        The created_at  # noqa: E501

        :return: The created_at of this VideoTag.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this VideoTag.

        The created_at  # noqa: E501

        :param created_at: The created_at of this VideoTag.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this VideoTag.  # noqa: E501

        The updated_at  # noqa: E501

        :return: The updated_at of this VideoTag.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this VideoTag.

        The updated_at  # noqa: E501

        :param updated_at: The updated_at of this VideoTag.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VideoTag):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VideoTag):
            return True

        return self.to_dict() != other.to_dict()
