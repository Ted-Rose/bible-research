# coding: utf-8

"""
    Digital Bible Platform

    Fast, easy, and free API access to video, audio, and text Bibles.  # noqa: E501

    The version of the OpenAPI document: 4.0.0-beta
    Contact: support@digitalbibleplatform.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.v4_alphabets_one_response import V4AlphabetsOneResponse  # noqa: E501
from openapi_client.rest import ApiException

class TestV4AlphabetsOneResponse(unittest.TestCase):
    """V4AlphabetsOneResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V4AlphabetsOneResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v4_alphabets_one_response.V4AlphabetsOneResponse()  # noqa: E501
        if include_optional :
            return V4AlphabetsOneResponse(
                data = openapi_client.models.v4_alphabets_one_response_data.v4_alphabets_one_response_data(
                    name = None, 
                    script = None, 
                    family = None, 
                    type = None, 
                    direction = None, 
                    fonts = [
                        openapi_client.models.alphabet_font.Alphabet Font(
                            id = 7, 
                            font_name = 'Noto Naskh Arabic', 
                            font_filename = 'NotoNaskhArabic-Regular', 
                            font_weight = 400, 
                            copyright = 'Creative Commons', 
                            url = 'https://cdn.example.com/resources/fonts/NotoNaskhArabic-Regular.ttf', 
                            notes = 'notes specific to this font', 
                            italic = False, )
                        ], 
                    languages = [
                        openapi_client.models.language.Language(
                            id = 6411, 
                            glotto_id = 'stan1288', 
                            iso = 'spa', 
                            name = 'Spanish', 
                            maps = 'Andorra and France', 
                            development = 'Fully developed. Bible: 1553-2000.', 
                            use = '60,000,000 L2 speakers.', 
                            location = '0', 
                            area = 'Central, south; Canary Islands. Also in Andorra, ...', 
                            population = 24900, 
                            population_notes = '58,200,000 in United Kingdom (Crystal 2003). Population total all countries: 334,800,758.', 
                            notes = 'The Aragonese dialect of Spanish is different from Aragonese language [arg]. Christian.', 
                            typology = 'SVO,prepositions,genitives, relatives after noun heads,articles, numerals before noun heads...', 
                            description = 'language description', 
                            status = '6a', 
                            country_id = 'ES', 
                            rolv_code = '0', 
                            deleted_at = '0', )
                        ], 
                    bibles = [
                        openapi_client.models.bible.Bible(
                            custom_font_required = True, 
                            id = 'ENGESV', 
                            language_id = None, 
                            date = 1963, 
                            scope = None, 
                            derived = 'English New Revised Standard Version', 
                            copyright = 'Â© 1999 Bible Society of Ghana', 
                            versification = 'protestant', 
                            created_at = '2018-02-12 13:32:23', 
                            updated_at = '2018-02-12 13:32:23', )
                        ], )
            )
        else :
            return V4AlphabetsOneResponse(
        )

    def testV4AlphabetsOneResponse(self):
        """Test V4AlphabetsOneResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
