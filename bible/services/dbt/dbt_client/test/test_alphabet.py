# coding: utf-8

"""
    Digital Bible Platform

    Fast, easy, and free API access to video, audio, and text Bibles.  # noqa: E501

    The version of the OpenAPI document: 4.0.0-beta
    Contact: support@digitalbibleplatform.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.alphabet import Alphabet  # noqa: E501
from openapi_client.rest import ApiException

class TestAlphabet(unittest.TestCase):
    """Alphabet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Alphabet
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.alphabet.Alphabet()  # noqa: E501
        if include_optional :
            return Alphabet(
                script = 'Cans', 
                name = 'Unified Canadian Aboriginal', 
                unicode_pdf = 'https://unicode.org/charts/PDF/U1400.pdf', 
                family = 'American', 
                type = 'abugida', 
                white_space = 'between words', 
                open_type_tag = 'cans', 
                complex_positioning = 'no', 
                requires_font = False, 
                unicode = True, 
                diacritics = True, 
                contextual_forms = False, 
                reordering = False, 
                case = False, 
                split_graphs = False, 
                status = 'Current', 
                baseline = 'Bottom', 
                ligatures = 'none', 
                direction = 'ltr', 
                sample = '0', 
                sample_img = '0'
            )
        else :
            return Alphabet(
        )

    def testAlphabet(self):
        """Test Alphabet"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
