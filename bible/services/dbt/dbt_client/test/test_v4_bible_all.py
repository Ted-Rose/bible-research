# coding: utf-8

"""
    Digital Bible Platform

    Fast, easy, and free API access to video, audio, and text Bibles.  # noqa: E501

    The version of the OpenAPI document: 4.0.0-beta
    Contact: support@digitalbibleplatform.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.v4_bible_all import V4BibleAll  # noqa: E501
from openapi_client.rest import ApiException

class TestV4BibleAll(unittest.TestCase):
    """V4BibleAll unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V4BibleAll
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v4_bible_all.V4BibleAll()  # noqa: E501
        if include_optional :
            return V4BibleAll(
                data = [
                    openapi_client.models.v4_bible_all_data.v4_bible_all_data(
                        abbr = None, 
                        name = None, 
                        vname = None, 
                        language = None, 
                        language_autonym = None, 
                        language_alt_names = None, 
                        iso = None, 
                        date = None, 
                        filesets = openapi_client.models.v4_bible_all_filesets.v4_bible_all_filesets(
                            dbp_prod = [
                                openapi_client.models.bible_fileset.Bible Fileset(
                                    id = 'ENGESV', 
                                    set_type_code = None, 
                                    set_size_code = None, )
                                ], ), )
                    ], 
                meta = openapi_client.models.pagination.Pagination(
                    pagination = openapi_client.models.pagination_pagination.pagination_pagination(
                        total = 1801, 
                        count = 25, 
                        per_page = 25, 
                        current_page = 1, 
                        total_pages = 73, ), )
            )
        else :
            return V4BibleAll(
        )

    def testV4BibleAll(self):
        """Test V4BibleAll"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
