# coding: utf-8

"""
    Digital Bible Platform

    Fast, easy, and free API access to video, audio, and text Bibles.  # noqa: E501

    The version of the OpenAPI document: 4.0.0-beta
    Contact: support@digitalbibleplatform.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.organization import Organization  # noqa: E501
from openapi_client.rest import ApiException

class TestOrganization(unittest.TestCase):
    """Organization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Organization
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.organization.Organization()  # noqa: E501
        if include_optional :
            return Organization(
                id = 1, 
                slug = 'american-bible-society', 
                abbreviation = '0', 
                notes = 'freetext archivist note', 
                primary_color = '#004b85', 
                secondary_color = '#e2383f', 
                inactive = True, 
                url_facebook = 'https://facebook.com', 
                url_website = 'https://someorg.com', 
                url_donate = 'https://donate.someorg.com', 
                url_twitter = 'https://twitter.com', 
                address = '123 Main Street', 
                address2 = '0', 
                city = 'Any City', 
                state = 'Some State', 
                country = '00000-000', 
                zip = 'Some Country', 
                phone = '999-999-9999', 
                email = 'contact@organization.com'
            )
        else :
            return Organization(
        )

    def testOrganization(self):
        """Test Organization"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
